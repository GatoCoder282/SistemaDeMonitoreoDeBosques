// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaDeMonitoreoDeBosques.Infraestructure.Data;

#nullable disable

namespace SistemaDeMontireoDeBosques.Infraestructure.Migrations
{
    [DbContext(typeof(ForestMonitoringDbContext))]
    partial class ForestMonitoringDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SistemaDeMonitoreoDeBosques.Core.Entities.Forest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<float>("averageAltitude")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("surface")
                        .HasColumnType("float");

                    b.Property<string>("vegatationType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("forests");
                });

            modelBuilder.Entity("SistemaDeMonitoreoDeBosques.Core.Entities.Sensor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("installationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("lastReading")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("latitude")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("longitude")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("readingFrequency")
                        .HasColumnType("int");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("zonaId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("sensors");
                });

            modelBuilder.Entity("SistemaDeMonitoreoDeBosques.Core.Entities.Vehicle", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("vehicle_type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("vehicles");
                });

            modelBuilder.Entity("SistemaDeMonitoreoDeBosques.Core.Entities.Visitor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ci")
                        .HasColumnType("int");

                    b.Property<int>("emergencyNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("entryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("exitDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("hasVehicle")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("isCamping")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("phoneNumber")
                        .HasColumnType("int");

                    b.Property<int?>("vehicleId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("vehicleId");

                    b.ToTable("visitors");
                });

            modelBuilder.Entity("SistemaDeMonitoreoDeBosques.Core.Entities.Visitor", b =>
                {
                    b.HasOne("SistemaDeMonitoreoDeBosques.Core.Entities.Vehicle", "vehicle")
                        .WithMany()
                        .HasForeignKey("vehicleId");

                    b.Navigation("vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
